class Solution {
public:
    bool canBeValid(string s, string locked) {

        if (s.size()%2!=0) return false;

        stack<int> st;
        stack<int> unlocked;
        for(int i = 0 ; i < s.size();i++){
            if (locked[i]=='0') unlocked.push(i);
            else if (s[i]=='('){
                st.push(i);
            }
            else{
                if (!st.empty()) st.pop();
                else{
                    if (!unlocked.empty()) unlocked.pop();
                    else return false;
                }
            }
        }

        while(!st.empty() && !unlocked.empty() && st.top()<unlocked.top()){
            st.pop();
            unlocked.pop();

        }
        return (st.empty());
        
    }
};
